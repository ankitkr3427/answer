
Q2) Design a Finite Automata (FA) that accepts all strings over S={0, 1} having either exactly two 1's or exactly three 1's, not more nor less. Write a program to simulate this FA.

#include <iostream>
#include <string>
using namespace std;

void State0(string w, int i);
void State1(string w, int i);
void State2(string w, int i);
void State3(string w, int i);
void State4(string w, int i);

int main() {
    string w;
    cout << "Enter a binary string: ";
    cin >> w;
    State0(w, 0); // Start with State 0
    return 0;
}

void State0(string w, int i) {
    if (i == w.length()) {
        cout << "String is rejected" << endl;
        return;
    }
    if (w[i] == '1') {
        State1(w, i + 1);
    } else {
        State0(w, i + 1); // Stay in State 0 for '0'
    }
}

void State1(string w, int i) {
    if (i == w.length()) {
        cout << "String is rejected" << endl;
        return;
    }
    if (w[i] == '1') {
        State2(w, i + 1);
    } else {
        State1(w, i + 1); // Stay in State 1 for '0'
    }
}

void State2(string w, int i) {
    if (i == w.length()) {
        cout << "String is accepted" << endl; // Final state for exactly two 1's
        return;
    }
    if (w[i] == '1') {
        State3(w, i + 1);
    } else {
        State2(w, i + 1); // Stay in State 2 for '0'
    }
}

void State3(string w, int i) {
    if (i == w.length()) {
        cout << "String is accepted" << endl; // Final state for exactly three 1's
        return;
    }
    if (w[i] == '1') {
        State4(w, i + 1);
    } else {
        State3(w, i + 1); // Stay in State 3 for '0'
    }
}

void State4(string w, int i) {
    if (i == w.length()) {
        cout << "String is rejected" << endl; // Rejected state for more than three 1's
        return;
    }
    if (w[i] == '1' || w[i] == '0') {
        State4(w, i + 1); // Stay in rejected state
    }
}
